[versions]
kotlin = "2.1.20"
agp = "8.9.1"
compose-plugin = "1.8.0-beta01"

minSdk = "24"
compileSdk = "36"
securityCrypto = "1.1.0-alpha06"
targetSdk = "34"
versionName = "1.0"
versionCode = "1"

androidx-activityCompose = "1.10.1"
compose-material3 = "1.3.1"
android-compose = "1.7.8"
material = "1.12.0"

ksp = "2.1.20-1.0.32" # https://github.com/google/ksp/releases
room = "2.7.0-rc03"
sqlite = "2.5.0-alpha07"
koin = "4.0.3"
koin-ksp = "2.0.0"

junit = "4.13.2"

ktor = "3.1.1"
immutableCollection = "0.3.5"
coroutine = "1.10.1"

kermit = "2.0.3"
coil = "3.1.0"
navigation = "2.9.0-alpha15"
lifecycle = "2.9.0-alpha05"
mockito = "5.12.0"
multiplatformSettings = "1.1.1"
serialization = "1.8.0"
kotlinxDatetime = "0.6.0"
decompose = "3.3.0"
essenty = "2.5.0"
parcelize = "0.2.4"
mockmp = "2.0.2"
buildConfig = "4.2.0"
[libraries]
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
androidx-security-crypto = { module = "androidx.security:security-crypto", version.ref = "securityCrypto" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
compose-gradlePlugin = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "compose-plugin" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
room-gradlePlugin = { group = "androidx.room", name = "room-gradle-plugin", version.ref = "room" }

coroutine-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
coroutine-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutine" }

androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
android-material = { module = "com.google.android.material:material", version.ref = "material" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "android-compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "android-compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "android-compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "android-compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation" }

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extensions = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
essenty-stateKeeper = { module = "com.arkivanov.essenty:state-keeper", version.ref = "essenty" }
essenty-backHandler = { module = "com.arkivanov.essenty:back-handler", version.ref = "essenty" }
parcelize-darwin = { module = "com.arkivanov.parcelize.darwin:runtime", version.ref = "parcelize" }

koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
koin-android = { group = "io.insert-koin", name = "koin-android", version.ref = "koin" }
koin-android-compose = { group = "io.insert-koin", name = "koin-androidx-compose", version.ref = "koin" }
koin-compose = { group = "io.insert-koin", name = "koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { group = "io.insert-koin", name = "koin-compose-viewmodel", version.ref = "koin" }

koin-ksp-compiler = { group = "io.insert-koin", name = "koin-ksp-compiler", version.ref = "koin-ksp" }
koin-annotations = { group = "io.insert-koin", name = "koin-annotations", version.ref = "koin-ksp" }

coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
coil-core = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }

kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
kotlinx-collections-immutable = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version.ref = "immutableCollection" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinxDatetime" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-auth = { group = "io.ktor", name = "ktor-client-auth", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }

lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
slf4j-simple = { group = "org.slf4j", name = "slf4j-simple", version = "1.7.9" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
koin-test = { group = "io.insert-koin", name = "koin-test" }
koin-test-junit = { group = "io.insert-koin", name = "koin-test-junit4" }
coroutine-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version = "1.10.1" }
mockito = { group = "org.mockito", name = "mockito-core", version.ref = "mockito" }
junit = { group = "junit", name = "junit", version.ref = "junit" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }

convention-kmp-library = { id = "convention.kmp.library", version = "1.0" }
convention-kmp-library-compose = { id = "convention.kmp.library.compose", version = "1.0" }
convention-kmp-application = { id = "convention.kmp.application", version = "1.0" }
convention-android-library-compose = { id = "convention.android.library.compose", version = "1.0" }
convention-kmp-library-room = { id = "convention.kmp.library.room", version = "1.0" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
mockmp = { id = "org.kodein.mock.mockmp", version.ref = "mockmp" }
[bundles]
test = [
    "kotlin-test",
    "koin-test",
    "koin-test-junit",
    "coroutine-test",
    "mockito",
    "junit"
]
ktor = [
    "ktor-client-core",
    "ktor-client-content-negotiation",
    "ktor-serialization-kotlinx-json",
    "ktor-client-cio",
    "ktor-client-logging",
    "ktor-client-auth",
    "slf4j-simple",
]
coil = [
    "coil-compose",
    "coil-ktor",
    "coil-core"
]